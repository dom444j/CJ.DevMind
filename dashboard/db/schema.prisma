// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String
  passwordHash  String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  projects      Project[]
  licenses      License[]
  creditPacks   CreditPack[]
  activities    Activity[]
}

model Project {
  id            String    @id @default(uuid())
  name          String
  description   String?
  status        String    // active, completed, planning
  progress      Int       @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  
  activities    Activity[]
  apiUsage      ApiUsage[]
}

model License {
  id            String    @id @default(uuid())
  type          String    // community, professional, enterprise
  key           String    @unique
  isActive      Boolean   @default(true)
  validUntil    DateTime
  createdAt     DateTime  @default(now())
  
  userId        String
  user          User      @relation(fields: [userId], references: [id])
}

model CreditPack {
  id            String    @id @default(uuid())
  amount        Int
  remaining     Int
  purchaseDate  DateTime  @default(now())
  expiryDate    DateTime?
  
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  
  apiUsage      ApiUsage[]
}

model ApiUsage {
  id            String    @id @default(uuid())
  provider      String    // openai, anthropic, pinecone, etc.
  model         String    // gpt-4, claude-2, etc.
  tokensUsed    Int
  cost          Float
  timestamp     DateTime  @default(now())
  
  projectId     String
  project       Project   @relation(fields: [projectId], references: [id])
  
  creditPackId  String
  creditPack    CreditPack @relation(fields: [creditPackId], references: [id])
}

model Activity {
  id            String    @id @default(uuid())
  action        String
  target        String
  details       String?
  timestamp     DateTime  @default(now())
  
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  
  projectId     String?
  project       Project?  @relation(fields: [projectId], references: [id])
}